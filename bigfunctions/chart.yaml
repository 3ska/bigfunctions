type: function_sql
samples:
  - "chart(data, chart_type, ylabel)"
description: |-
  Replaces the variables surrounded by brackets such as `{{variable_name}}` in `template` by their values defined in `context`.
  Beware that `context` keys and string values must be surrounded by double-quotes `"` and not single-quotes `'`.
arguments:
  - name: data
    type: ARRAY<STRUCT<x STRING, y FLOAT64>>
    test_value: Hello {{username}}
  - name: chart_type
    type: STRING
    test_value: '{"username": "James"}'
  - name: ylabel
    type: STRING
output:
  name: html
  type: STRING
  expected_value: Hello James
example: |-
  ``` sql
  SELECT {BIGFUNCTIONS_DATASET}.chart([
    ('2022-08-01', 10000),
    ('2022-08-02', 20000),
    ('2022-08-03', 40000),
    ('2022-08-04', 80000)
  ], 'bar', 'sales') as html
  ```
code: |
  replace(replace(replace(replace(replace("""
    <div><canvas id="%ID%"></canvas></div>
    <script>
      (function() {
        new Chart(
          document.getElementById('%ID%'),
          {
              type: '%CHART_TYPE%',
              data: {
                labels: [%X%],
                datasets: [{
                  label: '%YLABEL%',
                  data: [%Y%],
                  borderColor: 'rgb(75, 192, 192)',
                  backgroundColor: 'rgb(75, 192, 192)',
                }]
              },
              options: {}
            }
        );
      })();
    </script>
  """,
  '%ID%', generate_uuid()),
  '%CHART_TYPE%', chart_type),
  '%YLABEL%', ylabel),
  '%X%', (select array_to_string(array_agg(format('"%s"', data.x) order by data.x), ',') from unnest(data) data)),
  '%Y%', (select array_to_string(array_agg(cast(data.y as string) order by data.x), ',') from unnest(data) data)
  )