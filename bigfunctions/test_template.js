var context = {"columns":[{"data_type":"FLOAT64","hist":[{"x":"[0.5, 2.25[","y":894966.0},{"x":"[2.25, 4[","y":1983324.0},{"x":"[4, 5.75[","y":10371461.0},{"x":"[5.75, 7.5[","y":62501510.0},{"x":"[7.5, 9.25[","y":54500311.0},{"x":"[9.25, 11[","y":7096050.0},{"x":"[11, 12.75[","y":257018.0},{"x":"[12.75, 14.5[","y":10108.0},{"x":"[14.5, 16.25[","y":1467.0},{"x":"[16.25, 18]","y":855.0}],"hist_html":"\n  <div><canvas id=\"18b7fb07-2e11-40fa-acb5-6d11f0bf7ca9\"></canvas></div>\n  <script>\n    (function() {\n      new Chart(\n        document.getElementById('18b7fb07-2e11-40fa-acb5-6d11f0bf7ca9'),\n        {\n            type: 'bar',\n            data: {\n              labels: [\"[0.5, 2.25[\",\"[2.25, 4[\",\"[4, 5.75[\",\"[5.75, 7.5[\",\"[7.5, 9.25[\",\"[9.25, 11[\",\"[11, 12.75[\",\"[12.75, 14.5[\",\"[14.5, 16.25[\",\"[16.25, 18]\"],\n              datasets: [{\n                label: 'value_count',\n                data: [894966,1983324,10371461,62501510,54500311,7096050,257018,10108,1467,855],\n                borderColor: 'rgb(75, 192, 192)',\n                backgroundColor: 'rgb(75, 192, 192)',\n              }]\n            },\n            options: {}\n          }\n      );\n    })();\n  </script>\n","name":"weight_pounds","stats":{"distinct_count":6836,"distinct_ratio":4.959849488738265e-05,"max":18.0007436923,"mean":7.312617805563479,"min":0.50044933474,"missing_count":209693,"missing_ratio":0.0015214243985400716,"row_count":137826763},"top_values":[{"value":"5.99877814902","value_count":31982,"value_ratio":0.00023204491859102864},{"value":"7.43839671988","value_count":2320860,"value_ratio":0.016838964722693226},{"value":"8.1350574678","value_count":76280,"value_ratio":0.0005534483894104079},{"value":"8.421658408399999","value_count":77922,"value_ratio":0.0005653618956428659},{"value":"7.3634395508","value_count":123504,"value_ratio":0.0008960814090946908},{"value":"7.3744626639","value_count":2475131,"value_ratio":0.01795827563620572},{"value":"7.06361087448","value_count":1878157,"value_ratio":0.013626939783821231},{"value":"6.93794738514","value_count":1944344,"value_ratio":0.014107158563972079},{"value":"8.62448368944","value_count":1275848,"value_ratio":0.009256895919408627},{"value":"7.23777606146","value_count":8582,"value_ratio":6.2266571551129e-05}]}],"table":{"last_modified_time":"2016-03-14 17:16:47 UTC","name":"`bigquery-public-data.samples.natality`","row_count":137826763,"size_bytes":23562717384}};

var template = `
<div class="container">
  <div class="columns">
    <div class="column">
      <section class="hero">
        <div class="hero-body">
          <p class="is-size-3" style="max-width: none">Table <code>{{ table.name }}</code></p>
          <p class="is-size-5 mt-4" style="max-width: none;">
            {{ table.row_count | add_thousands_separators_to_integers }} rows<br>
            {{ table.size_bytes | size_bytes_pretty }}<br>
            last updated on {{ table.last_modified_time }}
          </p>
          <p class="mt-4" style="max-width: none; color: #3367d6;"><i>Generated by bigfunctions.io</i></p>
        </div>
      </section>
    </div>
  </div>
  {% for column in columns -%}
    <div class="box">
      <p class="is-size-4 mb-6 mt-4">Column <code>{{ column.name }}</code> <code>{{ column.data_type }}</code></p>
      <div class="columns">
        <div class="column is-one-quarter">
          <table class="table is-narrow">
            {% for label, value in column.stats -%}
              <tr>
                <th class="has-text-weight-bold">{{ label }}</th>
                <td>{% if 'ratio' in label%}{{ value | as_percentage }}{% else %}{{ value | add_thousands_separators_to_integers }}{% endif %}</td>
              </tr>
            {% endfor %}
          </table>
        </div>
        <div class="column">
          {{ column.hist_html|safe }}
        </div>
      </div>
    </div>
  {% endfor %}
</div>
`




const setInnerHTML = function(elm, html) {
  elm.innerHTML = html;
  Array.from(elm.querySelectorAll("script")).forEach( oldScript => {
    const newScript = document.createElement("script");
    Array.from(oldScript.attributes)
      .forEach( attr => newScript.setAttribute(attr.name, attr.value) );
    newScript.appendChild(document.createTextNode(oldScript.innerHTML));
    oldScript.parentNode.replaceChild(newScript, oldScript);
  });
};


function render() {

  var env = nunjucks.configure();

  env.addFilter('add_thousands_separators_to_integers', function(x) {
      if (Number.isInteger(x)) {
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
      }
      return x;
  });

  env.addFilter('as_percentage', function(x) {
      if (x > 0.01) {
        return Math.round(x * 100).toString() + ' %';
      }
      if (x < 0.001) {
        return '< 0.1 %';
      }
      return (0.1 * Math.round(x * 1000)).toString() + ' %';
  });

  env.addFilter('size_bytes_pretty', function(x) {
      if (x > 1e12) {
        return Math.round(x * 1e-12).toString() + ' TB';
      }
      if (x > 1e9) {
        return Math.round(x * 1e-9).toString() + ' GB';
      }
      if (x > 1e6) {
        return Math.round(x * 1e-6).toString() + ' MB';
      }
      return Math.round(x * 1e-6).toString() + ' KB';
  });


  var html = env.renderString(template, context);
  setInnerHTML(document.querySelector('div'),  html);
}

render();